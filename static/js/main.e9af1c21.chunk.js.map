{"version":3,"sources":["components/contacts/contacts.module.css","components/filter/filter.module.css","components/form/form.module.css","components/section/section.js","components/form/form.js","components/contacts/contacts.js","components/filter/filter.js","App.js","index.js","components/section/section.module.css"],"names":["module","exports","Section","title","children","className","s","section","head","Form","state","name","number","handelChange","event","currentTarget","value","setState","formSubmit","e","preventDefault","props","onSubmit","reset","form","this","labelForm","inputForm","type","pattern","required","onChange","buttonForm","Component","Contacts","contacts","onDeleteContact","map","id","contactItem","delete","onClick","propTypec","PropTypes","array","func","Filter","headFilter","inputFilter","App","filter","deleteContact","prevState","contact","addContact","uuidv4","includes","alert","doFilter","getVisibleContacts","normalize","toLocaleLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9af1c21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__3ulO3\",\"delete\":\"contacts_delete__1FaQu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headFilter\":\"filter_headFilter__1hGKB\",\"inputFilter\":\"filter_inputFilter__8talP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__21Mra\",\"labelForm\":\"form_labelForm__2qLSf\",\"inputForm\":\"form_inputForm__3vB9Z\",\"buttonForm\":\"form_buttonForm__2WOL_\"};","import PropTypes from 'prop-types';\r\nimport s from './section.module.css';\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.head}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n","import React, { Component } from 'react';\r\nimport s from './form.module.css';\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  handelChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  formSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.formSubmit}>\r\n        <label className={s.labelForm}>\r\n          Name\r\n          <input\r\n            className={s.inputForm}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <label className={s.labelForm}>\r\n          Number\r\n          <input\r\n            className={s.inputForm}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handelChange}\r\n          />\r\n        </label>\r\n        <button className={s.buttonForm} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from './contacts.module.css';\r\nexport default function Contacts({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id} id={id} className={s.contactItem}>\r\n            {name}: {number}\r\n            <button\r\n              className={s.delete}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                onDeleteContact(id);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nContacts.propTypec = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <h3 className={s.headFilter}>Find contacts by name</h3>\r\n      <input\r\n        className={s.inputFilter}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Section from './components/section/section';\nimport Form from './components/form/form';\nimport Contacts from './components/contacts/contacts';\nimport Filter from './components/filter/filter';\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  addContact = ({ name, number }) => {\n    const contactItem = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const contactsNames = this.state.contacts.map(contact => contact.name);\n    if (contactsNames.includes(name)) {\n      alert(`${name} is already in contacts`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [contactItem, ...contacts],\n      }));\n    }\n  };\n\n  doFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalize = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalize),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.doFilter} />\n          <Contacts\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"section_head__2PKEK\",\"section\":\"section_section__2ukCI\"};"],"sourceRoot":""}